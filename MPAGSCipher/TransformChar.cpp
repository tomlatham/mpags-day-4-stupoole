// Our project headers
#include "TransformChar.hpp"

// For std::isalpha and std::isupper
#include <cctype>

std::string transformChar(const char in_char) {
    /*
       take the input character and transform it according to the following:
       - Must be uppercase
       - Ignore alphanumberic characters
       - Change numbers to english words, e.g. '0' -> ZERO

       char in_char: The character to transform

       return: The string generated by the transformed character
     */

    std::string out_text;

    // Uppercase alphabetic characters
    if (std::isalpha(in_char)) {
        out_text += std::toupper(in_char);
        return out_text;
    }

    // Transliterate digits to English words
    switch (in_char) {
        case '0':
            out_text = "ZERO";
            break;
        case '1':
            out_text = "ONE";
            break;
        case '2':
            out_text = "TWO";
            break;
        case '3':
            out_text = "THREE";
            break;
        case '4':
            out_text = "FOUR";
            break;
        case '5':
            out_text = "FIVE";
            break;
        case '6':
            out_text = "SIX";
            break;
        case '7':
            out_text = "SEVEN";
            break;
        case '8':
            out_text = "EIGHT";
            break;
        case '9':
            out_text = "NINE";
            break;
        default:
            break;
    }

    // If the character isn't alphabetic or numeric, DONT add it.
    // Our ciphers can only operate on alphabetic characters.

    return out_text;
}
